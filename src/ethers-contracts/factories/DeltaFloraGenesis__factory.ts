/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DeltaFloraGenesis,
  DeltaFloraGenesisInterface,
} from "../DeltaFloraGenesis";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "adminMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "allowlistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payoutAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currentStage",
        type: "uint256",
      },
    ],
    name: "setCurrentStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    name: "setMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_payoutAddress",
        type: "address",
      },
    ],
    name: "setPayoutAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stage",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "set",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxPerAddress",
            type: "uint8",
          },
          {
            internalType: "uint240",
            name: "price",
            type: "uint240",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
        ],
        internalType: "struct DeltaFloraGenesis.StageConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "setStageConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stageMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stages",
    outputs: [
      {
        internalType: "bool",
        name: "set",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "maxPerAddress",
        type: "uint8",
      },
      {
        internalType: "uint240",
        name: "price",
        type: "uint240",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028a3380380620028a3833981016040819052620000349162000334565b6040518060400160405280601081526020016fe28886464c4f52412047656e6573697360801b8152506040518060400160405280600781526020016647454e4553495360c81b81525081600290816200008e9190620004bf565b5060036200009d8282620004bf565b50506000805550620000af33620000ef565b600a805460ff60a01b19169055600f8390556010620000cf8382620004bf565b50620000dc338262000141565b620000e662000246565b5050506200058b565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6127106001600160601b0382161115620001b55760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b0382166200020d5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401620001ac565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600855565b62000250620002a9565b600a805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586200028c3390565b6040516001600160a01b03909116815260200160405180910390a1565b620002bd600a54600160a01b900460ff1690565b15620002ff5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401620001ac565b565b634e487b7160e01b600052604160045260246000fd5b80516001600160601b03811681146200032f57600080fd5b919050565b6000806000606084860312156200034a57600080fd5b8351602080860151919450906001600160401b03808211156200036c57600080fd5b818701915087601f8301126200038157600080fd5b81518181111562000396576200039662000301565b604051601f8201601f19908116603f01168101908382118183101715620003c157620003c162000301565b816040528281528a86848701011115620003da57600080fd5b600093505b82841015620003fe5784840186015181850187015292850192620003df565b82841115620004105760008684830101525b809750505050505050620004276040850162000317565b90509250925092565b600181811c908216806200044557607f821691505b6020821081036200046657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004ba57600081815260208120601f850160051c81016020861015620004955750805b601f850160051c820191505b81811015620004b657828155600101620004a1565b5050505b505050565b81516001600160401b03811115620004db57620004db62000301565b620004f381620004ec845462000430565b846200046c565b602080601f8311600181146200052b5760008415620005125750858301515b600019600386901b1c1916600185901b178555620004b6565b600085815260208120601f198616915b828110156200055c578886015182559484019460019091019084016200053b565b50858210156200057b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612308806200059b6000396000f3fe60806040526004361061021a5760003560e01c80635c975abb116101235780638da5cb5b116100ab578063ce6df2b91161006f578063ce6df2b91461069f578063d5abeb01146106b2578063e58306f9146106c8578063e985e9c5146106e8578063f2fde38b1461073157600080fd5b80638da5cb5b1461060c57806395d89b411461062a578063a22cb4651461063f578063b88d4fde1461065f578063c87b56dd1461067f57600080fd5b8063715018a6116100f2578063715018a61461050457806374031aa2146105195780637a37149d146105395780638456cb5914610571578063845ddcb21461058657600080fd5b80635c975abb146104855780636352211e146104a45780636f8b44b0146104c457806370a08231146104e457600080fd5b806330509bca116101a657806342842e0e1161017557806342842e0e146103ef57806342966c681461040f57806355f804b31461042f5780635b8d02d71461044f5780635bf5d54c1461046f57600080fd5b806330509bca1461038557806333ea51a81461039a57806338c67b73146103ba5780633f4ba83a146103da57600080fd5b8063081812fc116101ed578063081812fc146102ab578063095ea7b3146102e357806318160ddd1461030357806323b872dd146103265780632a55205a1461034657600080fd5b8063017c966a1461021f57806301ffc9a71461023457806304634d8d1461026957806306fdde0314610289575b600080fd5b61023261022d366004611b62565b610751565b005b34801561024057600080fd5b5061025461024f366004611c04565b6108d0565b60405190151581526020015b60405180910390f35b34801561027557600080fd5b50610232610284366004611c21565b6108f0565b34801561029557600080fd5b5061029e610906565b6040516102609190611cbe565b3480156102b757600080fd5b506102cb6102c6366004611cd1565b610998565b6040516001600160a01b039091168152602001610260565b3480156102ef57600080fd5b506102326102fe366004611cea565b6109dc565b34801561030f57600080fd5b50600154600054035b604051908152602001610260565b34801561033257600080fd5b50610232610341366004611d16565b610a7c565b34801561035257600080fd5b50610366610361366004611d57565b610c09565b604080516001600160a01b039093168352602083019190915201610260565b34801561039157600080fd5b50610232610cb5565b3480156103a657600080fd5b506102326103b5366004611d79565b610d55565b3480156103c657600080fd5b506102326103d5366004611cd1565b610d7f565b3480156103e657600080fd5b50610232610d8c565b3480156103fb57600080fd5b5061023261040a366004611d16565b610d9e565b34801561041b57600080fd5b5061023261042a366004611cd1565b610dbe565b34801561043b57600080fd5b5061023261044a366004611d96565b610dc9565b34801561045b57600080fd5b50600e546102cb906001600160a01b031681565b34801561047b57600080fd5b50610318600b5481565b34801561049157600080fd5b50600a54600160a01b900460ff16610254565b3480156104b057600080fd5b506102cb6104bf366004611cd1565b610dde565b3480156104d057600080fd5b506102326104df366004611cd1565b610de9565b3480156104f057600080fd5b506103186104ff366004611d79565b610df6565b34801561051057600080fd5b50610232610e45565b34801561052557600080fd5b50610232610534366004611e08565b610e57565b34801561054557600080fd5b50610318610554366004611e40565b600d60209081526000928352604080842090915290825290205481565b34801561057d57600080fd5b50610232610e7f565b34801561059257600080fd5b506105da6105a1366004611cd1565b600c602052600090815260409020805460019091015460ff80831692610100810490911691620100009091046001600160f01b03169084565b60408051941515855260ff90931660208501526001600160f01b03909116918301919091526060820152608001610260565b34801561061857600080fd5b50600a546001600160a01b03166102cb565b34801561063657600080fd5b5061029e610e8f565b34801561064b57600080fd5b5061023261065a366004611e73565b610e9e565b34801561066b57600080fd5b5061023261067a366004611eb7565b610f33565b34801561068b57600080fd5b5061029e61069a366004611cd1565b610f77565b6102326106ad366004611cea565b610ffb565b3480156106be57600080fd5b50610318600f5481565b3480156106d457600080fd5b506102326106e3366004611cea565b6110e2565b3480156106f457600080fd5b50610254610703366004611f97565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561073d57600080fd5b5061023261074c366004611d79565b6110f4565b61075961116a565b600b546000818152600c60209081526040918290208251608081018452815460ff8082161515835261010082041693820193909352620100009092046001600160f01b03169282019290925260019091015460608201526107bb8183876111b7565b60608101516000036108095760405162461bcd60e51b81526020600482015260126024820152711b9bdd08185b1b1bdddb1a5cdd081b5a5b9d60721b60448201526064015b60405180910390fd5b604080513360601b6bffffffffffffffffffffffff191660208083019190915282516014818403018152603490920190925280519101206108509082606001518686611323565b61088f5760405162461bcd60e51b815260206004820152601060248201526f3130b21036b2b935b63290383937b7b360811b6044820152606401610800565b6000828152600d60209081526040808320338452909152812080548792906108b8908490611fdb565b909155506108c89050868661133c565b505050505050565b60006108db82611356565b806108ea57506108ea826113a4565b92915050565b6108f86113d9565b6109028282611433565b5050565b60606002805461091590611ff3565b80601f016020809104026020016040519081016040528092919081815260200182805461094190611ff3565b801561098e5780601f106109635761010080835404028352916020019161098e565b820191906000526020600020905b81548152906001019060200180831161097157829003601f168201915b5050505050905090565b60006109a382611530565b6109c0576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006109e782610dde565b9050336001600160a01b03821614610a2057610a038133610703565b610a20576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610a8782611557565b9050836001600160a01b0316816001600160a01b031614610aba5760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054610ae68187335b6001600160a01b039081169116811491141790565b610b1157610af48633610703565b610b1157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610b3857604051633a954ecd60e21b815260040160405180910390fd5b8015610b4357600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610bd557600184016000818152600460205260408120549003610bd3576000548114610bd35760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03166000805160206122b383398151915260405160405180910390a46108c8565b60008281526009602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610c7e5750604080518082019091526008546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610c9d906001600160601b03168761202d565b610ca7919061204c565b915196919550909350505050565b610cbd6113d9565b600e546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610d0a576040519150601f19603f3d011682016040523d82523d6000602084013e610d0f565b606091505b5050905080610d525760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610800565b50565b610d5d6113d9565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b610d876113d9565b600b55565b610d946113d9565b610d9c6115be565b565b610db983838360405180602001604052806000815250610f33565b505050565b610d52816001611613565b610dd16113d9565b6010610db98284836120b4565b60006108ea82611557565b610df16113d9565b600f55565b60006001600160a01b038216610e1f576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610e4d6113d9565b610d9c600061174b565b610e5f6113d9565b6000828152600c602052604090208190610e798282612174565b50505050565b610e876113d9565b610d9c61179d565b60606003805461091590611ff3565b336001600160a01b03831603610ec75760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610f3e848484610a7c565b6001600160a01b0383163b15610e7957610f5a848484846117e0565b610e79576040516368d2bf6b60e11b815260040160405180910390fd5b6060610f8282611530565b610f9f57604051630a14c4b560e41b815260040160405180910390fd5b6000610fa96118c8565b90508051600003610fc95760405180602001604052806000815250610ff4565b80610fd3846118d7565b604051602001610fe49291906121fa565b6040516020818303038152906040525b9392505050565b61100361116a565b600b546000818152600c60209081526040918290208251608081018452815460ff8082161515835261010082041693820193909352620100009092046001600160f01b03169282019290925260019091015460608201526110658183856111b7565b6060810151156110a95760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081c1d589b1a58c81b5a5b9d608a1b6044820152606401610800565b6000828152600d60209081526040808320338452909152812080548592906110d2908490611fdb565b90915550610e799050848461133c565b6110ea6113d9565b610902828261133c565b6110fc6113d9565b6001600160a01b0381166111615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610800565b610d528161174b565b600a54600160a01b900460ff1615610d9c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610800565b600f54816111c86001546000540390565b6111d29190611fdb565b11156112125760405162461bcd60e51b815260206004820152600f60248201526e6f766572206d617820737570706c7960881b6044820152606401610800565b82516112505760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461676560981b6044820152606401610800565b8083604001516001600160f01b0316611269919061202d565b3410156112b85760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742066756e64732073656e740000000000000000006044820152606401610800565b6020808401516000848152600d83526040808220338352909352919091205460ff909116906112e8908390611fdb565b1115610db95760405162461bcd60e51b815260206004820152600a6024820152691bdd995c881b1a5b5a5d60b21b6044820152606401610800565b600061133183838688611926565b90505b949350505050565b61090282826040518060200160405280600081525061193e565b60006301ffc9a760e01b6001600160e01b03198316148061138757506380ac58cd60e01b6001600160e01b03198316145b806108ea5750506001600160e01b031916635b5e139f60e01b1490565b60006001600160e01b0319821663152a902d60e11b14806108ea57506301ffc9a760e01b6001600160e01b03198316146108ea565b600a546001600160a01b03163314610d9c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610800565b6127106001600160601b03821611156114a15760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610800565b6001600160a01b0382166114f75760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401610800565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600855565b60008054821080156108ea575050600090815260046020526040902054600160e01b161590565b6000816000548110156115a55760008181526004602052604081205490600160e01b821690036115a3575b80600003610ff4575060001901600081815260046020526040902054611582565b505b604051636f96cda160e11b815260040160405180910390fd5b6115c66119ab565b600a805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600061161e83611557565b90508060008061163c86600090815260066020526040902080549091565b91509150841561167c57611651818433610ad1565b61167c5761165f8333610703565b61167c57604051632ce44b5f60e11b815260040160405180910390fd5b801561168757600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040812091909155600160e11b85169003611715576001860160008181526004602052604081205490036117135760005481146117135760008181526004602052604090208590555b505b60405186906000906001600160a01b038616906000805160206122b3833981519152908390a45050600180548101905550505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6117a561116a565b600a805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115f63390565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611815903390899088908890600401612229565b6020604051808303816000875af1925050508015611850575060408051601f3d908101601f1916820190925261184d91810190612266565b60015b6118ae573d80801561187e576040519150601f19603f3d011682016040523d82523d6000602084013e611883565b606091505b5080516000036118a6576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611334565b60606010805461091590611ff3565b604080516080810191829052607f0190826030600a8206018353600a90045b801561191457600183039250600a81066030018353600a90046118f6565b50819003601f19909101908152919050565b6000826119348686856119fb565b1495945050505050565b6119488383611a47565b6001600160a01b0383163b15610db9576000548281035b61197260008683806001019450866117e0565b61198f576040516368d2bf6b60e11b815260040160405180910390fd5b81811061195f5781600054146119a457600080fd5b5050505050565b600a54600160a01b900460ff16610d9c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610800565b600081815b84811015611a3e57611a2a82878784818110611a1e57611a1e612283565b90506020020135611b21565b915080611a3681612299565b915050611a00565b50949350505050565b6000805490829003611a6c5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083906000805160206122b38339815191528180a4600183015b818114611af757808360006000805160206122b3833981519152600080a4600101611ad1565b5081600003611b1857604051622e076360e81b815260040160405180910390fd5b60005550505050565b6000818310611b3d576000828152602084905260409020610ff4565b5060009182526020526040902090565b6001600160a01b0381168114610d5257600080fd5b60008060008060608587031215611b7857600080fd5b8435611b8381611b4d565b935060208501359250604085013567ffffffffffffffff80821115611ba757600080fd5b818701915087601f830112611bbb57600080fd5b813581811115611bca57600080fd5b8860208260051b8501011115611bdf57600080fd5b95989497505060200194505050565b6001600160e01b031981168114610d5257600080fd5b600060208284031215611c1657600080fd5b8135610ff481611bee565b60008060408385031215611c3457600080fd5b8235611c3f81611b4d565b915060208301356001600160601b0381168114611c5b57600080fd5b809150509250929050565b60005b83811015611c81578181015183820152602001611c69565b83811115610e795750506000910152565b60008151808452611caa816020860160208601611c66565b601f01601f19169290920160200192915050565b602081526000610ff46020830184611c92565b600060208284031215611ce357600080fd5b5035919050565b60008060408385031215611cfd57600080fd5b8235611d0881611b4d565b946020939093013593505050565b600080600060608486031215611d2b57600080fd5b8335611d3681611b4d565b92506020840135611d4681611b4d565b929592945050506040919091013590565b60008060408385031215611d6a57600080fd5b50508035926020909101359150565b600060208284031215611d8b57600080fd5b8135610ff481611b4d565b60008060208385031215611da957600080fd5b823567ffffffffffffffff80821115611dc157600080fd5b818501915085601f830112611dd557600080fd5b813581811115611de457600080fd5b866020828501011115611df657600080fd5b60209290920196919550909350505050565b60008082840360a0811215611e1c57600080fd5b833592506080601f1982011215611e3257600080fd5b506020830190509250929050565b60008060408385031215611e5357600080fd5b823591506020830135611c5b81611b4d565b8015158114610d5257600080fd5b60008060408385031215611e8657600080fd5b8235611e9181611b4d565b91506020830135611c5b81611e65565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611ecd57600080fd5b8435611ed881611b4d565b93506020850135611ee881611b4d565b925060408501359150606085013567ffffffffffffffff80821115611f0c57600080fd5b818701915087601f830112611f2057600080fd5b813581811115611f3257611f32611ea1565b604051601f8201601f19908116603f01168101908382118183101715611f5a57611f5a611ea1565b816040528281528a6020848701011115611f7357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611faa57600080fd5b8235611fb581611b4d565b91506020830135611c5b81611b4d565b634e487b7160e01b600052601160045260246000fd5b60008219821115611fee57611fee611fc5565b500190565b600181811c9082168061200757607f821691505b60208210810361202757634e487b7160e01b600052602260045260246000fd5b50919050565b600081600019048311821515161561204757612047611fc5565b500290565b60008261206957634e487b7160e01b600052601260045260246000fd5b500490565b601f821115610db957600081815260208120601f850160051c810160208610156120955750805b601f850160051c820191505b818110156108c8578281556001016120a1565b67ffffffffffffffff8311156120cc576120cc611ea1565b6120e0836120da8354611ff3565b8361206e565b6000601f84116001811461211457600085156120fc5750838201355b600019600387901b1c1916600186901b1783556119a4565b600083815260209020601f19861690835b828110156121455786850135825560209485019460019092019101612125565b50868210156121625760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813561217f81611e65565b815460ff8215151691508160ff198216178355602084013560ff811681146121a657600080fd5b61ffff199190911690911760089190911b61ff001617815560408201356001600160f01b03811681146121d857600080fd5b815461ffff16601082901b61ffff191617825550606082013560018201555050565b6000835161220c818460208801611c66565b835190830190612220818360208801611c66565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061225c90830184611c92565b9695505050505050565b60006020828403121561227857600080fd5b8151610ff481611bee565b634e487b7160e01b600052603260045260246000fd5b6000600182016122ab576122ab611fc5565b506001019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220d4f1b77614046a9ba4bf643fc8808bef86a206a36451016957e50ce99630e87164736f6c634300080f0033";

type DeltaFloraGenesisConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeltaFloraGenesisConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeltaFloraGenesis__factory extends ContractFactory {
  constructor(...args: DeltaFloraGenesisConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxSupply: PromiseOrValue<BigNumberish>,
    baseURI_: PromiseOrValue<string>,
    feeNumerator: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeltaFloraGenesis> {
    return super.deploy(
      _maxSupply,
      baseURI_,
      feeNumerator,
      overrides || {}
    ) as Promise<DeltaFloraGenesis>;
  }
  override getDeployTransaction(
    _maxSupply: PromiseOrValue<BigNumberish>,
    baseURI_: PromiseOrValue<string>,
    feeNumerator: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxSupply,
      baseURI_,
      feeNumerator,
      overrides || {}
    );
  }
  override attach(address: string): DeltaFloraGenesis {
    return super.attach(address) as DeltaFloraGenesis;
  }
  override connect(signer: Signer): DeltaFloraGenesis__factory {
    return super.connect(signer) as DeltaFloraGenesis__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeltaFloraGenesisInterface {
    return new utils.Interface(_abi) as DeltaFloraGenesisInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeltaFloraGenesis {
    return new Contract(address, _abi, signerOrProvider) as DeltaFloraGenesis;
  }
}
